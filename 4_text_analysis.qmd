# Text analysis

```{r setup, message=FALSE,warning=FALSE}
library(tidyverse)
library(stm)
library(tidytext)
wp_words=readRDS("data/wp_words.RDS")
```

```{r plot_words_freq,fig.width=4,fig.height=5}
wp_words_freq=wp_words %>%
  group_by(lemma) %>% 
  tally() %>% 
  arrange(desc(n)) %>% 
  slice_max(n,n=30)

ggplot(wp_words_freq,aes(x=forcats::fct_reorder(lemma,n),
                         y=n) )+
  geom_col()+
  coord_flip()+
  labs(x="lemma",y="frequency")
```



```{r tib_sparse}

tib_sparse=wp_words %>% 
  group_by(lemma) %>% # compte pour chaque lemme...
  mutate(n=n()) %>% # ...son nombre d'occurrences puis
  filter(n>20) %>%  # retire ceux représentés moins de 20 fois dans le corpus
  ungroup() %>% 
  cast_sparse(row=flood, column=lemma, value=n)
```


```{r run_stm}
if(!file.exists("data/topic_model.RDS")){
set.seed(123)
topic_model<-stm(tib_sparse,K=6, verbose=FALSE)
saveRDS(topic_model,"data/topic_model.RDS")
}
topic_model=readRDS("data/topic_model.RDS")
```



```{r termes_thematiques}
termes_thematiques=tidy(topic_model, matrix="beta") %>% 
  group_by(topic) %>% 
  slice_max(beta,n=30) %>%  
  mutate(rank=row_number()) %>% 
  arrange(topic,desc(beta)) %>% 
  ungroup()
termes_thematiques
```
```{r add_topic_labels}
topics=tibble::tribble(~topic,~topic_label,
                       1,"1) spatial range",
                       2,"2) weather",
                       3,"3) hydrology",
                       4,"4) management",
                       5,"5) historical importance",
                       6,"6) human toll")

termes_thematiques=termes_thematiques %>% 
  left_join(topics,by="topic")
saveRDS(termes_thematiques,"data/termes_thematiques.RDS")
```

```{r tib_gamma}
tib_gamma <- tidy(topic_model, matrix = "gamma") %>% 
  left_join(wp_words %>%
              group_by(flood) %>%
              summarise(nwords=n()) %>%
              mutate(document=1:n()),by="document") %>% 
  arrange(flood,desc(gamma)) %>% 
  left_join(topics,by="topic")
saveRDS(tib_gamma,"data/tib_gamma.RDS")
```



## Choice of number of classes

```{r}
wp_texts=wp_words %>% group_by(flood,flood_label) %>% summarise(text=str_c(lemma,collapse=" "),.groups="drop")
temp=textProcessor(documents=wp_texts$text,
                   metadata=wp_texts %>% select(-text))
out <- prepDocuments(temp$documents, temp$vocab, temp$meta)
```

```{r}
if(!file.exists("data/kresult.RDS")){
  documents <- out$documents
  vocab <- out$vocab
  meta <- out$meta
  set.seed(02138)
  K<-c(3:8)
  kresult <- searchK(documents, vocab, K, data=meta)
  saveRDS(kresult,"data/kresult.RDS")

}
kresult=readRDS("data/kresult.RDS")
plot(kresult)
```

## Specificities

```{r}
wm_full=readRDS("data/wm_full.RDS")
wp_words2=wp_words %>% 
  left_join(wm_full %>% select(flood,date,country_label),by="flood") %>% 
  mutate(year=lubridate::year(date)) %>% 
  mutate(recent=year>2000) %>% 
  mutate(age=case_when(recent~"recent",
                          !recent~"old"))
library(mixr)
tib_spec <- tidy_specificities(wp_words2,cat1=lemma, cat2=country_label, min_spec=2)
head(tib_spec)
```

